from selenium import webdriver  # Selenium 웹 드라이버 가져오기
from selenium.webdriver.common.by import By  # 요소 찾기 위한 By 모듈 가져오기
from selenium.webdriver.chrome.options import Options  # Chrome 옵션 설정을 위한 모듈 가져오기
import time  # 시간 관련 함수 가져오기
import random  # 랜덤 숫자 생성기 가져오기
import pandas as pd  # 데이터 분석을 위한 pandas 가져오기

# Chrome 드라이버 옵션 설정
options = Options()
options.add_argument('--window-size=974,1047')  # 브라우저 크기 설정
options.add_argument('--window-position=-7,0')  # 브라우저 위치 설정
options.add_experimental_option("detach", True)  # 스크립트 종료 후 브라우저 유지

# Chrome 드라이버 초기화
driver = webdriver.Chrome(options=options)

# 크롤링할 앱의 URL 설정
url = 'https://play.google.com/store/apps/details?id=com.estsoft.picnic'
driver.get(url)  # 해당 URL로 이동
time.sleep(random.randint(2, 3))  # 2초에서 3초 랜덤 대기

# 리뷰 버튼의 XPath 설정
xpath = '//*[@id="yDmH0d"]/c-wiz[2]/div/div/div[1]/div/div[2]/div/div[1]/div[1]/c-wiz[5]/section/header/div/div[2]/button/i'
driver.find_element(By.XPATH, xpath).click()  # 버튼 클릭
time.sleep(random.randint(2, 3))  # 2초에서 3초 랜덤 대기

# 리뷰를 스크롤하며 로드하기
for i in range(10):  # 10회 반복
    review_box = driver.find_element(By.CSS_SELECTOR, 'div.fysCi')  # 리뷰 영역 찾기
    driver.execute_script('arguments[0].scrollTop = arguments[0].scrollHeight', review_box)  # 스크롤
    time.sleep(random.randint(2, 3))  # 2초에서 3초 랜덤 대기

# 리뷰 요소들을 찾기
reviews = driver.find_elements(By.CSS_SELECTOR, 'div.RHo1pe')
reviews  # 리뷰 리스트

# 리뷰 정보를 저장할 리스트 초기화
result = []
for i in reviews:  # 각 리뷰에 대해 반복
    review = {}  # 리뷰 정보를 담을 딕셔너리 초기화
    review['text'] = i.find_element(By.CSS_SELECTOR, '.h3YV2d').text  # 리뷰 텍스트 추출
    review['star'] = len(i.find_elements(By.CSS_SELECTOR, '.F7XJmb'))  # 별점 개수 추출
    review['date'] = i.find_element(By.CSS_SELECTOR, '.bp9Aid').text  # 리뷰 날짜 추출
    result.append(review)  # 결과 리스트에 추가
    print(review)  # 리뷰 정보 출력

# 리뷰 내용을 추출하는 함수 정의
def get_content(review):
    condic = {}  # 결과를 저장할 딕셔너리 초기화
    condic['text'] = review.find_element(By.CSS_SELECTOR, 'div.h3YV2d').text  # 리뷰 텍스트 추출
    condic['rat'] = len(review.find_elements(By.CSS_SELECTOR, 'span.Z1Dz7b'))  # 별점 개수 추출
    condic['date'] = review.find_element(By.CSS_SELECTOR, 'span.bp9Aid').text  # 리뷰 날짜 추출
    return condic  # 결과 반환

# 모든 리뷰에 대해 내용을 추출하여 리스트 생성
result = [get_content(review) for review in reviews]

# 결과 리스트를 Pandas DataFrame으로 변환
df = pd.DataFrame(result)
df  # DataFrame 출력